name: Build and Push Next.js to External Repo

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source repo
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.17.0'
        
    - name: Install dependencies
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
        fi
      
    - name: Build Next.js project
      run: npm run build
        
    - name: Prepare artifacts (excluding cache)
      run: |
        mkdir -p deployment
        # Copy .next while explicitly excluding cache
        mkdir -p deployment/.next
        rsync -a --exclude='cache' .next/ deployment/.next/
        
        # Verify cache was excluded
        if [ -d "deployment/.next/cache" ]; then
          echo "Error: cache folder was not excluded"
          ls -la deployment/.next/
          exit 1
        fi
        
        # Copy other required files
        cp -a public deployment/ || true
        cp -a package*.json deployment/
        cp -a next.config.js deployment/ || true
      
    - name: Debug folder contents
      run: |
        echo "Deployment folder structure:"
        tree -L 3 deployment || ls -laR deployment

    - name: Create deployment script
      run: |
        cat > deployment/setup.sh << 'EOF'
        #!/bin/bash
        echo "Setting up production environment..."
        npm ci --only=production
        echo "Setup complete. Run 'npm start' to start the server."
        EOF
        chmod +x deployment/setup.sh
        
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Push to external repo
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          const fs = require('fs');
          
          try {
            // Clone target repo
            execSync('git clone https://${{secrets.PAT_GITHUB_SECRET}}@github.com/NTL-ES/fe-config-build main');
            
            // Clean target repo except .git
            fs.readdirSync('main').forEach(file => {
              if (file !== '.git') {
                fs.rmSync(`main/${file}`, { recursive: true, force: true });
              }
            });

            // Copy using rsync to preserve permissions
            execSync('rsync -a deployment/ main/');
            
            // Commit and push
            process.chdir('main');
            execSync('git add .');
            execSync('git commit -m "Deploy: ${{ github.sha }} [excluded cache]"');
            execSync('git push');
          } catch (error) {
            console.error('Deployment failed:', error);
            process.exit(1);
          }

    - name: Verify deployment
      run: |
        cd main
        echo "Running production setup..."
        ./setup.sh
        echo "Production setup verified!"